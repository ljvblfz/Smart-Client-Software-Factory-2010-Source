'----------------------------------------------------------------------------------------
'patterns & practices - Smart Client Software Factory - Guidance Package
'
'This file was generated by this guidance package as part of the solution template
'
'The WindowWorkspace class provides an extension to the builtin CAB WindowWorkspace 
'by allowing better customization of the form: Accept and Cancel button and FormBorderStyle
' 
' 

'
'Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
'----------------------------------------------------------------------------------------

Imports System
Imports System.Collections.Generic
Imports System.Text
Imports System.Windows.Forms

Namespace UI

    Public Class WindowWorkspace
        Inherits Microsoft.Practices.CompositeUI.WinForms.WindowWorkspace

        Private _owner As IWin32Window

        Public Sub New()
        End Sub

        Public Sub New(ByVal owner As IWin32Window)
            MyBase.New(owner)

            _owner = owner
        End Sub

        Protected Overrides Sub OnShow(ByVal smartPart As System.Windows.Forms.Control, ByVal smartPartInfo As Microsoft.Practices.CompositeUI.WinForms.WindowSmartPartInfo)
            GetOrCreateForm(smartPart)
            OnApplySmartPartInfo(smartPart, smartPartInfo)
            MyBase.OnShow(smartPart, smartPartInfo)
        End Sub

        Protected Overrides Sub OnClose(ByVal smartPart As System.Windows.Forms.Control)
            Dim host As Form = Windows(smartPart)
            host.Hide()
            MyBase.OnClose(smartPart)
        End Sub

        Protected Overrides Sub OnApplySmartPartInfo(ByVal smartPart As System.Windows.Forms.Control, ByVal smartPartInfo As Microsoft.Practices.CompositeUI.WinForms.WindowSmartPartInfo)
            MyBase.OnApplySmartPartInfo(smartPart, smartPartInfo)

            If TypeOf smartPartInfo Is WindowSmartPartInfo Then
                Dim spi As WindowSmartPartInfo = CType(smartPartInfo, WindowSmartPartInfo)

                If spi.Keys.ContainsKey(WindowWorkspaceSetting.AcceptButton) Then
                    Windows(smartPart).AcceptButton = CType(spi.Keys(WindowWorkspaceSetting.AcceptButton), IButtonControl)
                End If

                If spi.Keys.ContainsKey(WindowWorkspaceSetting.CancelButton) Then
                    Windows(smartPart).CancelButton = CType(spi.Keys(WindowWorkspaceSetting.CancelButton), IButtonControl)
                End If

                If spi.Keys.ContainsKey(WindowWorkspaceSetting.FormBoderStyle) Then
                    Windows(smartPart).FormBorderStyle = CType(spi.Keys(WindowWorkspaceSetting.FormBoderStyle), FormBorderStyle)
                End If
            End If
        End Sub
        Protected Overloads Function GetOrCreateForm(ByVal control As Control) As Form
            Dim resizeRequired As Boolean = Not (Windows.ContainsKey(control))
            Dim form As Form = MyBase.GetOrCreateForm(control)
            form.ShowInTaskbar = (_owner Is Nothing)

            If (resizeRequired) Then
                form.ClientSize = control.Size
            End If

            Return form
        End Function

    End Class
End Namespace
