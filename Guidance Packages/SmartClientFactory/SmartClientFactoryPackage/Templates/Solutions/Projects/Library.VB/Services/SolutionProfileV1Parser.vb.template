'----------------------------------------------------------------------------------------
'patterns & practices - Smart Client Software Factory - Guidance Package
'
'This file was generated by this guidance package as part of the solution template
'
'The SolutionProfileV1Parser class provides the implementation for v1 of the Profile Catalog
' 
' 

'
'Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
'----------------------------------------------------------------------------------------

Imports System.Collections.Generic
Imports Microsoft.Practices.CompositeUI.Configuration
Imports $RootNamespace$.$safeprojectname$.SolutionProfileV1
Imports $RootNamespace$.$safeprojectname$.Services
Namespace Services

    Public Class SolutionProfileV1Parser
        Implements ISolutionProfileParser

        Public Const _Namespace As String = "http://schemas.microsoft.com/pag/cab-profile"

        Public Function Parse(ByVal xml As String) As Microsoft.Practices.CompositeUI.Configuration.IModuleInfo() Implements ISolutionProfileParser.Parse
            Dim solution As SolutionProfileV1.SolutionProfileElement = XmlValidationHelper.DeserializeXML(Of SolutionProfileV1.SolutionProfileElement)(xml, "SolutionProfileV1.xsd", _Namespace)

            Dim mis As New List(Of ModuleInfo)

            If Not solution.Modules Is Nothing Then
                For Each moduleInfo As SolutionProfileV1.ModuleInfoElement In solution.Modules
                    Dim mi As ModuleInfo = New ModuleInfo(moduleInfo.AssemblyFile)
                    SetModuleRoles(moduleInfo, mi)
                    mis.Add(mi)
                Next
            End If

            Return mis.ToArray()

        End Function

        Private Shared Sub SetModuleRoles(ByVal moduleInfo As SolutionProfileV1.ModuleInfoElement, ByVal mi As ModuleInfo)
            If (Not moduleInfo.Roles Is Nothing) AndAlso (moduleInfo.Roles.Length > 0) Then
                For Each role As SolutionProfileV1.RoleElement In moduleInfo.Roles
                    mi.AddRoles(role.Allow)
                Next
            End If
        End Sub
    End Class
End Namespace
