<#@ template language="C#" #>
<#@ assembly name="System.dll" #>
<#@ property processor="PropertyProcessor" name="RootNamespace"#>
<#@ property processor="PropertyProcessor" name="ApplicationBaseClass" #>
<#@ property processor="PropertyProcessor" name="ApplicationBaseClassNamespace" #>
//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by this guidance package as part of the solution template
//
// The SmartClientApplication class provides a placeholder to add global services and builder strategies
// for the application.
// 
//  
//
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System.Windows.Forms;
using Microsoft.Practices.CompositeUI;
using Microsoft.Practices.CompositeUI.Services;
using <#= ApplicationBaseClassNamespace #>;
using <#= RootNamespace #>.Infrastructure.Interface.Services;
using <#= RootNamespace #>.Infrastructure.Library.Services;

namespace <#= RootNamespace #>.Infrastructure.Library
{
	public abstract class SmartClientApplication<TWorkItem, TShell> : <#= ApplicationBaseClass #><TWorkItem, TShell>
		where TWorkItem : WorkItem, new()
		where TShell : Form
	{
		protected override void AddServices()
		{
			base.AddServices();

			RootWorkItem.Services.AddNew<ProfileCatalogModuleInfoStore, IModuleInfoStore>();
			RootWorkItem.Services.AddNew<WorkspaceLocatorService, IWorkspaceLocatorService>();
			RootWorkItem.Services.Remove<IModuleEnumerator>();
			RootWorkItem.Services.Remove<IModuleLoaderService>();
			RootWorkItem.Services.AddNew<XmlStreamDependentModuleEnumerator, IModuleEnumerator>();
			RootWorkItem.Services.AddNew<DependentModuleLoaderService, IModuleLoaderService>();
			RootWorkItem.Services.AddOnDemand<ActionCatalogService, IActionCatalogService>();
			RootWorkItem.Services.AddOnDemand<EntityTranslatorService, IEntityTranslatorService>();
		}
	}
} 
