//===============================================================================
// Microsoft patterns & practices
// Smart Client Software Factory 2010
//===============================================================================
// Copyright (c) Microsoft Corporation.  All rights reserved.
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY
// OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT
// LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
// FITNESS FOR A PARTICULAR PURPOSE.
//===============================================================================
// The example companies, organizations, products, domain names,
// e-mail addresses, logos, people, places, and events depicted
// herein are fictitious.  No association with any real company,
// organization, product, domain name, email address, logo, person,
// places, or events is intended or should be inferred.
//===============================================================================
//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add View" recipe.
//
// A presenter calls methods of a view to update the information that the view displays. 
// The view exposes its methods through an interface definition, and the presenter contains
// a reference to the view interface. This allows you to test the presenter with different 
// implementations of a view (for example, a mock view).
//
// For more information see:
// ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ms.scsf.2006jun/SCSF/html/03-030-Model%20View%20Presenter%20%20MVP%20.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System;
using Microsoft.Practices.ObjectBuilder;
using Microsoft.Practices.CompositeUI;
using Microsoft.Practices.QuickStarts.WPFIntegration.Infrastructure.Interface;
using Microsoft.Practices.CompositeUI.EventBroker;
using Microsoft.Practices.QuickStarts.WPFIntegration.OrganizationChart.Constants;
using Microsoft.Practices.CompositeUI.Utility;
using System.Xml;

namespace Microsoft.Practices.QuickStarts.WPFIntegration.OrganizationChart
{
    public class OrgChartViewPresenter : Presenter<IOrgChartView>
    {
        [EventPublication(EventTopicNames.PositionSelected, PublicationScope.Global)]
        public event EventHandler<DataEventArgs<XmlElement>> PositionSelected;

        /// <summary>
        /// This method is a placeholder that will be called by the view when it's been loaded <see cref="System.Winforms.Control.OnLoad"/>
        /// </summary>
        public override void OnViewReady()
        {
            base.OnViewReady();
            XmlDocument chart = new XmlDocument();
            chart.Load(@"OrganizationChart.xml");
            View.ShowOrgChart(chart);
        }

        /// <summary>
        /// Close the view
        /// </summary>
        public void OnCloseView()
        {
            base.CloseView();
        }

        public void OnPositionSelected(System.Xml.XmlElement element)
        {
            if (PositionSelected != null)
            {
                PositionSelected(this, new DataEventArgs<XmlElement>(element));
            }
        }        
    }
}

